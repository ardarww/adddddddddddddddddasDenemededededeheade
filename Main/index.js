const _0x130678 = _0x352e; function _0x352e(_0x19637b, _0x301b62) { const _0x212aee = _0x212a(); return _0x352e = function (_0x352e70, _0x272398) { _0x352e70 = _0x352e70 - 0x1b2; let _0x243003 = _0x212aee[_0x352e70]; return _0x243003; }, _0x352e(_0x19637b, _0x301b62); } (function (_0x373333, _0x4c4cf2) { const _0x16d225 = _0x352e, _0x2eae41 = _0x19e8, _0x15bea6 = _0x373333(); while (!![]) { try { const _0x387850 = parseInt(_0x2eae41(0x1bb)) / 0x1 * (parseInt(_0x16d225(0x1c1)) / 0x2) + parseInt(_0x2eae41(0x1c5)) / 0x3 * (parseInt(_0x16d225(0x1c8)) / 0x4) + parseInt(_0x16d225(0x1b2)) / 0x5 * (parseInt(_0x2eae41(0x1c2)) / 0x6) + -parseInt(_0x16d225(0x1d4)) / 0x7 * (-parseInt(_0x2eae41(0x1b5)) / 0x8) + -parseInt(_0x16d225(0x1c6)) / 0x9 * (parseInt(_0x2eae41(0x1bd)) / 0xa) + -parseInt(_0x16d225(0x1ca)) / 0xb + -parseInt(_0x2eae41(0x1c3)) / 0xc; if (_0x387850 === _0x4c4cf2) break; else _0x15bea6['push'](_0x15bea6['shift']()); } catch (_0x43d546) { _0x15bea6['push'](_0x15bea6['shift']()); } } }(_0x212a, 0x1e7f5)); const fs = require('fs'), fetch = require(_0x130678(0x1ba)), config = require('../config.js'), path = require(_0x130678(0x1d3)), sleep = _0x49a51e => new Promise(_0x2c0e07 => setTimeout(_0x2c0e07, _0x49a51e)); function _0x19e8(_0x19637b, _0x301b62) { const _0x212aee = _0x212a(); return _0x19e8 = function (_0x352e70, _0x272398) { _0x352e70 = _0x352e70 - 0x1b2; let _0x243003 = _0x212aee[_0x352e70]; if (_0x19e8['aPWEAS'] === undefined) { var _0x8bcd15 = function (_0x19e8ff) { const _0x422979 = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/='; let _0x1147dc = '', _0x48f4f8 = ''; for (let _0x488755 = 0x0, _0x50e3fd, _0x4ebe21, _0x49a51e = 0x0; _0x4ebe21 = _0x19e8ff['charAt'](_0x49a51e++); ~_0x4ebe21 && (_0x50e3fd = _0x488755 % 0x4 ? _0x50e3fd * 0x40 + _0x4ebe21 : _0x4ebe21, _0x488755++ % 0x4) ? _0x1147dc += String['fromCharCode'](0xff & _0x50e3fd >> (-0x2 * _0x488755 & 0x6)) : 0x0) { _0x4ebe21 = _0x422979['indexOf'](_0x4ebe21); } for (let _0x2c0e07 = 0x0, _0x5a5aa4 = _0x1147dc['length']; _0x2c0e07 < _0x5a5aa4; _0x2c0e07++) { _0x48f4f8 += '%' + ('00' + _0x1147dc['charCodeAt'](_0x2c0e07)['toString'](0x10))['slice'](-0x2); } return decodeURIComponent(_0x48f4f8); }; _0x19e8['tDOUrB'] = _0x8bcd15, _0x19637b = arguments, _0x19e8['aPWEAS'] = !![]; } const _0x224b60 = _0x212aee[0x0], _0x49f0c9 = _0x352e70 + _0x224b60, _0x33fb21 = _0x19637b[_0x49f0c9]; return !_0x33fb21 ? (_0x243003 = _0x19e8['tDOUrB'](_0x243003), _0x19637b[_0x49f0c9] = _0x243003) : _0x243003 = _0x33fb21, _0x243003; }, _0x19e8(_0x19637b, _0x301b62); } function _0x212a() { const _0x26d549 = ['yM90', 'https://discord.com/api/oauth2/authorize?client_id=', 'mJK2DKLOyuLj', 'ANnVBG', '42KIYmVm', 'DgHLBG', '210YUMFjl', 'node-fetch', 'mNf6EgfmyG', 'joined', 'mJeWwvvnrMPS', 'mtm0mdi1mwnVq3LZuq', 'AM9PBG', '../tokens.txt', '246580ZgHGPW', 'ndjlsvLTvM0', 'mJKZmZa1mMf5sLLwuG', 'location', 'm0fguxPKta', '62037uQngIu', 'zMLSDgvY', '621508dNHJHg', 'readFileSync', '1340251coCysQ', 'Bg9JyxrPB24', 'EYjWzxjTAxnZAw9UCYi6iJaIlcjHDxrOB3jPEMuIoNrYDwv9', 'ue9tva', 'C3bSAxq', 'exports', '3AFQzdL', 'utf8', 'yxbWBgLJyxrPB24VANnVBG', 'path', '31017xoXTQu', 'log', '296vIhaII', '50020JlHHVO']; _0x212a = function () { return _0x26d549; }; return _0x212a(); } let i = 0x0; module[_0x130678(0x1cf)] = () => { ((async () => { const _0x57372f = _0x352e, _0x4b2899 = _0x19e8, _0x5a5aa4 = path[_0x4b2899(0x1bf)](__dirname, _0x57372f(0x1c0)), _0x84c300 = fs[_0x57372f(0x1c9)](_0x5a5aa4, _0x57372f(0x1d1))[_0x4b2899(0x1ce)](/\r?\n/)[_0x4b2899(0x1c7)](Boolean); for (const _0x49d208 of _0x84c300) { await sleep(0x5dc); try { let _0x403022 = await fetch(_0x57372f(0x1b4) + config[_0x4b2899(0x1b3)]['id'] + '&redirect_uri=http%3A%2F%2Flocalhost%3A3001&response_type=code&scope=identify%20email%20guilds.join', { 'headers': { 'authorization': _0x49d208, 'content-type': _0x4b2899(0x1d2) }, 'body': _0x4b2899(0x1cc), 'method': _0x4b2899(0x1cd) })['then'](_0x3c6abb => _0x3c6abb[_0x4b2899(0x1b6)]()); _0x403022[_0x57372f(0x1c4)] && fetch(_0x403022?.[_0x4b2899(0x1cb)])[_0x4b2899(0x1b8)](_0x4cfadc => _0x4cfadc['json']())[_0x4b2899(0x1b8)](_0x4f501b => { const _0x1cdc7f = _0x57372f; _0x4f501b[_0x1cdc7f(0x1bc)] && (i++, console[_0x1cdc7f(0x1d5)](i + '\x20-\x20' + _0x4f501b['message'])); })['catch'](_0x4db2a4 => { }); } catch (_0x48e748) { } } })()); };